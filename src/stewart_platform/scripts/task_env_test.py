#!/usr/bin/env python
import rospy
from reaching_pose_env import PoseSetEnv

print("Task env test ...")
if __name__ == '__main__':
    rospy.init_node("Task_stewart_robot_test")
    # rospy.init_node('Stewart_hadi', anonymous=True, log_level=rospy.WARN)

    hadi_stewart = PoseSetEnv()
    rate = rospy.Rate(1)
    hadi_stewart.set_pid_values(1000,0.1,100)
    # hadi_stewart.set_poistion_joints([0.5,0.5,0.5,0.5,0.5,0.5])
    while not rospy.is_shutdown():
        rate.sleep()
        rate.sleep()
        rate.sleep()
        hadi_stewart.move_end_effector(0,0,1.3,0,0,0)
        print("########################\n")
        print("MOVE to       X = 0,   Y = 0,   Z = 2")
        #hadi_stewart._get_obs()
        rate.sleep()
        rate.sleep()
        rate.sleep()
        print("Update ----------")
        hadi_stewart._get_obs()
        rate.sleep()
        rate.sleep()
        rate.sleep()
        rate.sleep()
        hadi_stewart.move_end_effector(1,1,2,0,0,0)
        print("########################\n")
        print("MOVE to       X = 1,   Y = 1,   Z = 2")
        #hadi_stewart._get_obs()
        rate.sleep()
        rate.sleep()
        rate.sleep()
        print("Update ----------")
        hadi_stewart._get_obs()
        rate.sleep()
        rate.sleep()
        rate.sleep()
        rate.sleep()
        hadi_stewart.move_end_effector(2,2,2,0,0,0)
        print("########################\n")
        print("MOVE to       X = 2   Y = 2,   Z = 2")
        #hadi_stewart._get_obs()
        rate.sleep()
        rate.sleep()
        rate.sleep()
        print("Update ----------")
        hadi_stewart._get_obs()
        rate.sleep()
        rate.sleep()
        rate.sleep()
        rate.sleep()
        hadi_stewart.move_end_effector(1,1,1,0,0,0)
        print("########################\n")
        print("MOVE to       X = 1,   Y = 1,   Z = 1")
        #hadi_stewart._get_obs()
        rate.sleep()
        rate.sleep()
        rate.sleep()
        print("Update ----------")
        hadi_stewart._get_obs()
        rate.sleep()
        rate.sleep()
        rate.sleep()
        rate.sleep()



      
